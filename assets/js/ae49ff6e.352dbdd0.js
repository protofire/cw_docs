"use strict";(self.webpackChunkcw_docs=self.webpackChunkcw_docs||[]).push([[607],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>m});var a=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=a.createContext({}),l=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=l(t.components);return a.createElement(s.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},h=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,r=t.originalType,s=t.parentName,u=c(t,["components","mdxType","originalType","parentName"]),p=l(n),h=o,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||r;return n?a.createElement(m,i(i({ref:e},u),{},{components:n})):a.createElement(m,i({ref:e},u))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=n.length,i=new Array(r);i[0]=h;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c[p]="string"==typeof t?t:o,i[1]=c;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},79:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:4},i="Step-by-Step Tutorial",c={unversionedId:"tutorial",id:"tutorial",title:"Step-by-Step Tutorial",description:"Navigating the world of smart contracts can seem daunting, especially if you're new to the blockchain realm. This tutorial aims to guide you through the process of creating, customizing, and deploying smart contracts using the Polkadot Contract Wizard (PCW).",source:"@site/docs/4_tutorial.md",sourceDirName:".",slug:"/tutorial",permalink:"/docs/tutorial",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/4_tutorial.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/getting_started"},next:{title:"Handling Errors",permalink:"/docs/errors"}},s={},l=[{value:"Creating a New Contract",id:"creating-a-new-contract",level:2},{value:"1. Choosing a Contract Type:",id:"1-choosing-a-contract-type",level:3},{value:"2. Configuring Contract Extensions:",id:"2-configuring-contract-extensions",level:3},{value:"3. Compiling the Contract:",id:"3-compiling-the-contract",level:3},{value:"4. Deploying the Contract:",id:"4-deploying-the-contract",level:3},{value:"Interacting with Deployed Contracts",id:"interacting-with-deployed-contracts",level:2},{value:"1. Access Your Contracts:",id:"1-access-your-contracts",level:3},{value:"2. Choose a Contract:",id:"2-choose-a-contract",level:3},{value:"3. Interact:",id:"3-interact",level:3},{value:"4. Review &amp; Confirm:",id:"4-review--confirm",level:3},{value:"Custom Contracts",id:"custom-contracts",level:2},{value:"1. Provide Contract Details:",id:"1-provide-contract-details",level:3},{value:"2. Interact:",id:"2-interact",level:3}],u={toc:l},p="wrapper";function d(t){let{components:e,...r}=t;return(0,o.kt)(p,(0,a.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"step-by-step-tutorial"},"Step-by-Step Tutorial"),(0,o.kt)("p",null,"Navigating the world of smart contracts can seem daunting, especially if you're new to the blockchain realm. This tutorial aims to guide you through the process of creating, customizing, and deploying smart contracts using the Polkadot Contract Wizard (PCW)."),(0,o.kt)("h2",{id:"creating-a-new-contract"},"Creating a New Contract"),(0,o.kt)("h3",{id:"1-choosing-a-contract-type"},"1. Choosing a Contract Type:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Contract Wizard Img",src:n(9619).Z,width:"1263",height:"630"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Access PCW: Open the Polkadot Contract Wizard in your web browser.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Select Contract Type: On the main screen, you'll be presented with various contract types, such as Standard Token, Multi-Token, and NFT. Click on your desired contract type to proceed."))),(0,o.kt)("p",null,"For further information about PSP check ",(0,o.kt)("a",{parentName:"p",href:"../blog/Polkadot%20Standard%20Poposals%20-%20PSP"},"this")),(0,o.kt)("h3",{id:"2-configuring-contract-extensions"},"2. Configuring Contract Extensions:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Contract Wizard Img",src:n(9301).Z,width:"1248",height:"881"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"View Extensions: Based on your chosen contract type, you'll see a list of available extensions.")),(0,o.kt)("p",null,"For further information about Extensions check ",(0,o.kt)("a",{parentName:"p",href:"../blog/Selectable%20options%20on%20each%20PSP%20contract"},"this")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Customize: Select the extensions you wish to include in your contract. These extensions allow you to add specific functionalities to your contract.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'Proceed: Once you\'ve made your selections, click on the "Next" button.'))),(0,o.kt)("h3",{id:"3-compiling-the-contract"},"3. Compiling the Contract:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Contract Wizard Img",src:n(3721).Z,width:"1254",height:"862"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Review: Before compiling, review your contract settings and chosen extensions to ensure everything is in order.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'Compile: Click on the "Compile" button. PCW will then process your contract. This might take a few moments.'))),(0,o.kt)("p",null,"For further information about WASM check ",(0,o.kt)("a",{parentName:"p",href:"../blog/Deeper%20into%20smart%20contracts%20on%20Polkadot"},"this")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Compilation Success: Once the compilation is successful, you'll receive a notification. If there are any issues, PCW will provide error messages to guide you on what needs fixing.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Contract Wizard Img",src:n(472).Z,width:"1252",height:"648"})),(0,o.kt)("h3",{id:"4-deploying-the-contract"},"4. Deploying the Contract:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Connect Wallet: Ensure your Polkadot-compatible wallet is connected and has the necessary funds for deployment.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'Deploy: Click on the "Deploy" button. PCW will guide you through the deployment process, including confirming the transaction in your wallet.')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Deployment Success: Once the contract is successfully deployed, you'll receive a confirmation along with details of your deployed contract."))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Contract Wizard Img",src:n(7333).Z,width:"1256",height:"599"})),(0,o.kt)("h2",{id:"interacting-with-deployed-contracts"},"Interacting with Deployed Contracts"),(0,o.kt)("h3",{id:"1-access-your-contracts"},"1. Access Your Contracts:"),(0,o.kt)("p",null,'Navigate to the "Contracts" section in PCW to view a list of your deployed contracts.'),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Contract Wizard Img",src:n(7945).Z,width:"1260",height:"637"})),(0,o.kt)("h3",{id:"2-choose-a-contract"},"2. Choose a Contract:"),(0,o.kt)("p",null,"Click on the contract you wish to interact with."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Contract Wizard Img",src:n(9309).Z,width:"1268",height:"502"})),(0,o.kt)("h3",{id:"3-interact"},"3. Interact:"),(0,o.kt)("p",null,"PCW provides a dynamic interface based on your contract's functionalities. Here, you can execute various actions, such as transferring tokens, minting new tokens, or any other functions your contract supports.\nThe read and write functionalities have been separated in different tabs for improved organization."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Contract Wizard Img",src:n(1275).Z,width:"1259",height:"656"})),(0,o.kt)("h3",{id:"4-review--confirm"},"4. Review & Confirm:"),(0,o.kt)("p",null,"Before executing any action, review the details and ensure everything is correct. Confirm the action in your connected wallet to finalize the transaction."),(0,o.kt)("h2",{id:"custom-contracts"},"Custom Contracts"),(0,o.kt)("p",null,"If you have a custom contract not created through PCW, you can still interact with it:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Contract Wizard Img",src:n(8396).Z,width:"1249",height:"570"})),(0,o.kt)("h3",{id:"1-provide-contract-details"},"1. Provide Contract Details:"),(0,o.kt)("p",null,'Navigate to the "Custom Contracts" section and input the necessary details, such as metadata, network, and contract address.'),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Contract Wizard Img",src:n(4660).Z,width:"1249",height:"658"})),(0,o.kt)("h3",{id:"2-interact"},"2. Interact:"),(0,o.kt)("p",null,"After PCW creates the interaction layout, you can engage with your custom contract in the same way as any other contract on the platform. You will have the ability to interact with the read and write functions, just as you would with contracts generated by the platform."))}d.isMDXComponent=!0},3721:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/contract-code-85367a3a8f1ffaa5033cd2338ceaeb66.png"},472:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/contract-compiled-536e68a8c50239939a42a9541e00fece.png"},7333:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/contract-deployed-eef0c59ffe7e0cd3c7b2d310c876e06c.png"},7945:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/contracts-button-d73448e0e9222d67181b0cdf01765811.png"},8396:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/custom-contract-c877294103a15efbee39638a9ee7d3f4.png"},4660:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/custom-input-53a6d6020aa93bfd5368d09ff828ba50.png"},9301:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/extensions-3ef286223dc4a4c00acf6b9964691a73.png"},1275:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/interact-d91ffcab3c8b3b555371f8d78f5a2e6d.png"},9619:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/psp-selection-278db921955711f84f6963f9998a864a.png"},9309:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/select-contract-2f77068291faa8cebbb3953054742a54.png"}}]);